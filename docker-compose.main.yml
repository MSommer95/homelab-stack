version: '3.9'
services:

######################################### NGINX #########################################

  nginx:
    container_name: nginx
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./data/nginx:/data
      - ./data/nginx/letsencrypt:/etc/letsencrypt

######################################### PiHole #########################################

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "6080:80/tcp"
    environment:
      - TZ=Europe/Berlin
      - WEBPASSWORD=${PIHOLE_PASSWORD}
    # Volumes store your data between container upgrades
    volumes:
      - './data/pihole/etc-pihole:/etc/pihole'
      - './data/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    #cap_add:
    #  - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped

######################################### Homepage #########################################

  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    environment:
      - HOMEPAGE_VAR_GF_ADMIN=${GF_ADMIN}
      - HOMEPAGE_VAR_GF_PASSWORD=${GF_PASSWORD}
    volumes:
        - /:/hostfs:ro 
        - ./data/homepage/config:/app/config
        - /var/run/docker.sock:/var/run/docker.sock # pass local proxy
    ports:
        - "4000:3000"
    restart: unless-stopped

######################################### Postgres DB #########################################

  database:
    container_name: postgres
    image: postgres:14
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: unless-stopped

######################################### Apprise Notifications #########################################

  apprise:
    container_name: apprise
    image: caronc/apprise:latest
    restart: unless-stopped
    ports:
      - "8888:8000"
    volumes:
      - ./data/apprise/config:/config

######################################### Disabled #########################################

#  smtp:
#    container_name: smtp
#    image: tremolosecurity/smtp-blackhole
#    network_mode: "host"


#  wg-easy:
#    environment:
# Change this to your host's public address
#      - WG_HOST=mshomelab.chickenkiller.com

# Optional:
##      - PASSWORD=${WG_PASSWORD}
# - WG_PORT=51820
# - WG_DEFAULT_ADDRESS=10.8.0.x
#      - WG_DEFAULT_DNS=192.168.1.10
# - WG_MTU=1420
# - WG_ALLOWED_IPS=192.168.15.0/24, 10.0.1.0/24
# - WG_PRE_UP=echo "Pre Up" > /etc/wireguard/pre-up.txt
# - WG_POST_UP=echo "Post Up" > /etc/wireguard/post-up.txt
# - WG_PRE_DOWN=echo "Pre Down" > /etc/wireguard/pre-down.txt
# - WG_POST_DOWN=echo "Post Down" > /etc/wireguard/post-down.txt

#    image: weejewel/wg-easy
#    container_name: wg-easy
#    volumes:
#      - ./data/wg-easy:/etc/wireguard
#    ports:
#      - "51820:51820/udp"
#      - "51821:51821/tcp"
#    restart: unless-stopped
#    cap_add:
#      - NET_ADMIN
#      - SYS_MODULE
#    sysctls:
#      - net.ipv4.ip_forward=1
#      - net.ipv4.conf.all.src_valid_mark=1