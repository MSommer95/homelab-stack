version: '3.9'
services:

######################################### NGINX #########################################

  nginx:
    container_name: nginx
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./data/nginx:/data
      - ./data/nginx/letsencrypt:/etc/letsencrypt

######################################### PiHole #########################################

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "6080:80/tcp"
    environment:
      - TZ=Europe/Berlin
      - WEBPASSWORD=${PIHOLE_PASSWORD}
    # Volumes store your data between container upgrades
    volumes:
      - './data/pihole/etc-pihole:/etc/pihole'
      - './data/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    #cap_add:
    #  - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped

######################################### Homepage #########################################

  homepage:
    image: ghcr.io/gethomepage/homepage:latest 
    container_name: homepage
    environment:
      - HOMEPAGE_VAR_GF_ADMIN=${GF_ADMIN}
      - HOMEPAGE_VAR_GF_PASSWORD=${GF_PASSWORD}
      - JDOWNLOADER_USER=${JDOWNLOADER_USER}
      - JDOWNLOADER_PW=${JDOWNLOADER_PW}
      - JDOWNLOADER_CLIENT=${JDOWNLOADER_CLIENT}
      - HOMEPAGE_VAR_UNIFI_USER=${UNIFI_USER}
      - HOMEPAGE_VAR_UNIFI_PASS=${UNIFI_PASS}
      - HOMEPAGE_VAR_UNIFI_URL=${UNIFI_URL}
    volumes:
        - /:/hostfs:ro 
        - ./data/homepage/config:/app/config
        - /var/run/docker.sock:/var/run/docker.sock # pass local proxy
    ports:
        - "4000:3000"
    restart: unless-stopped

######################################### Postgres DB #########################################

  database:
    container_name: postgres
    image: tensorchord/pgvecto-rs:pg14-v0.1.11
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: unless-stopped


######################################### IT Tools #########################################

  it-tools:
    container_name: it-tools
    image: ghcr.io/corentinth/it-tools:latest
    restart: unless-stopped
    ports:
      - "8889:80"