version: '3.9'
services:

######################################### Jellyfin #########################################

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    network_mode: 'host'
      #mem_limit: "2g"
      #ports:
    #- "8096:8096"
    environment:
      - JELLYFIN_PublishedServerUrl=http://jellyfin.homie.local
      #- JELLYFIN_PublishedServerUrl=http://192.168.1.85:8096
    volumes:
      - ./data/jellyfin/config:/config
      - ./data/jellyfin/cache:/cache
      - /homiepool/media/Movies:/media/Movies
      - /homiepool/media/Series:/media/Series
    restart: 'unless-stopped'
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - "host.docker.internal:host-gateway"
    devices:
      # VAAPI Devices (examples)
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0

  ######################################### Plex #########################################

  plex:
      image: plexinc/pms-docker
      volumes:
          - '/homiepool/media:/data'
          - './data/plex/transcode:/transcode'
          - './data/plex/database:/config'
      environment:
          - PLEX_CLAIM=${PLEX_CLAIM}
          - TZ=${TZ}
      network_mode: 'host'
      container_name: plex
      restart: 'unless-stopped'

  ######################################### arr-stack #########################################

  bazarr:
    image: ghcr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ./data/bazarr/config:/config
      - /homiepool/media/Movies:/movies #optional
      - /homiepool/media/Series:/tv #optional
    ports:
      - "6767:6767"
    restart: unless-stopped

  radarr:
    image: ghcr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ./data/radarr/:/config
      - /homiepool/media/Movies:/movies #optional
      - /homiepool/radarr/downloads:/downloads #optional
    ports:
      - "7878:7878"
    restart: unless-stopped

  sonarr:
    image: ghcr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ./data/sonarr:/config
      - /homiepool/media/Series:/tv #optional
      - /homiepool/sonarr/downloads:/downloads #optional
    ports:
      - "8989:8989"
    restart: unless-stopped

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
    ports:
      - "5055:5055"
    volumes:
      - ./data/jellyseerr/config:/app/config
    restart: unless-stopped

  ######################################### Recipes #########################################

  web_recipes:
    container_name: recipes
    restart: unless-stopped
    image: vabene1111/recipes
      #    ports:
    #     - "8008:8080"
    environment:
      #ALLOWED_HOSTS: *
      ENABLE_PDF_EXPORT: 1
      DEBUG: 0
      SQL_DEBUG: 0
      DEBUG_TOOLBAR: 0
      GUNICORN_MEDIA: 0
      TIMEZONE: ${TZ}
      SECRET_KEY: ${RECIPE_TOKEN}
      DB_ENGINE: django.db.backends.postgresql
      POSTGRES_HOST: ${DB_HOSTNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_PORT: 5432
      #MEDIA_URL: /opt/recipes/mediafiles/
    volumes:
      - ./data/recipes/externalfiles:/opt/recipes/externalfiles
      - ./data/recipes/staticfiles:/opt/recipes/staticfiles
      - ./data/recipes/nginx_config:/opt/recipes/nginx/conf.d
      - ./data/recipes/mediafiles:/opt/recipes/mediafiles
    depends_on:
      - database

  nginx_recipes:
    container_name: nginx-recipes
    image: nginx:mainline-alpine
    restart: always
    ports:
      - "8008:80"
    depends_on:
      - web_recipes
    volumes:
      - ./data/recipes/externalfiles:/opt/recipes/externalfiles:ro
      - ./data/recipes/nginx_config:/etc/nginx/conf.d:ro
      - ./data/recipes/staticfiles:/static:ro
      - ./data/recipes/mediafiles:/media:ro

  ######################################### Navidrome #########################################

  navidrome:
    image: deluan/navidrome:latest
    #user: 1000:1000 # should be owner of volumes
    container_name: navidrome
    network_mode: "host"
    #ports:
    #  - "4533:4533"
    restart: unless-stopped
    environment:
      # Optional: put your config options customization here. Examples:
      ND_SCANSCHEDULE: 168h
      ND_LOGLEVEL: info
      ND_SESSIONTIMEOUT: 168h
      #ND_BASEURL: ""
    volumes:
      - "/homiepool/navidrome/data:/data"
      - "/homiepool/media/Music:/music:ro"

  ######################################### Snapdrop #########################################

  snapdrop:
    image: ghcr.io/linuxserver/snapdrop:latest
    container_name: snapdrop
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - ./data/snapdrop:/config
    ports:
      - "3002:80"
      - "3003:443"
    restart: unless-stopped


  ######################################### Excalidraw #########################################

  excalidraw:
    container_name: excalidraw
    image: excalidraw/excalidraw:latest
    restart: unless-stopped
    ports:
      - "5003:80"

  ######################################### JDownloader #########################################

  jdownloader-2:
    image: jlesage/jdownloader-2
    container_name: jdownloader
    environment:
      - JDOWNLOADER_USER=${JDOWNLOADER_USER}
      - JDOWNLOADER_PW=${JDOWNLOADER_PW}
      - JDOWNLOADER_CLIENT=${JDOWNLOADER_CLIENT}
    restart: unless-stopped
    ports:
      - "5800:5800"
    volumes:
      - "./data/jdownloader-2:/config:rw"
      - "/homiepool/media/Downloads:/output:rw"

  ######################################### RSS #########################################

  commafeed:
    container_name: commafeed
    image: athou/commafeed:latest
    restart: unless-stopped
    environment:
      - CF_DATABASE_DRIVERCLASS=org.postgresql.Driver
      - CF_DATABASE_URL=jdbc:postgresql://commafeed-postgres:5432/commafeed
      - CF_DATABASE_USER=commafeed
      - CF_DATABASE_PASSWORD=commafeed
    volumes:
      - ./data/commafeed/data:/commafeed/data
    ports:
      - "8082:8082"

  commafeed-postgresql:
    container_name: commafeed-postgres
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: commafeed
      POSTGRES_PASSWORD: commafeed
      POSTGRES_DB: commafeed
    volumes:
      - /path/to/commafeed/db:/var/lib/postgresql/data
